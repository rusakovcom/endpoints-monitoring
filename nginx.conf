user www-data;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Your server blocks go here
    server {
        listen 80;
        server_name example.com www.example.com;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name example.com www.example.com;

        # SSL configuration
        ssl_certificate /etc/ssl/certs/public.crt;
        ssl_certificate_key /etc/ssl/certs/private.key;

        # Serve Prometheus at the root with Basic Authentication
        location /prometheus/ {

            # generate credentials for auth_basic
            # dnf install httpd-tools && htpasswd -c ./.htpasswd admin
           
            auth_basic "Restricted Area";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://prometheus:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve Grafana at /grafana
        location /grafana/ {
            
            # auth_basic "Grafana Restricted";
            # auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

        }

        error_page 404 /404.html;

    }
}

